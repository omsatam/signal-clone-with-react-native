{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","Components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","message","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","View","inputContainer","placeholder","value","onChangeText","text","autoFocus","type","secureTextEntry","onSubmitEditing","containerStyle","button","onPress","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","padding","marginTop","RegisterScreen","name","setName","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","h3","marginBottom","raised","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","headerStyle","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","AddChatScreen","input","setInput","leftIcon","disabled","a","async","add","goBack","ChatScreen","route","messages","setMessages","headerTitleAlign","headerTitle","Text","params","Ionicons","console","log","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","paddingBottom","reciever","position","bottom","right","recieverText","sender","senderText","senderName","footer","TextInput","onSubmitEditting","textInput","alignSelf","borderRadius","maxWidth","margin","left","paddingRight","fontSize","Stack","createStackNavigator","globalScreenOptions","textAlign","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.b68a6db0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCMBung6oBS-PywCSbZtYrVu45iGxO6Leo\",\r\n  authDomain: \"signal-clone-app-a536e.firebaseapp.com\",\r\n  databaseURL: \"https://signal-clone-app-a536e-default-rtdb.firebaseio.com\",\r\n  projectId: \"signal-clone-app-a536e\",\r\n  storageBucket: \"signal-clone-app-a536e.appspot.com\",\r\n  messagingSenderId: \"991944109860\",\r\n  appId: \"1:991944109860:web:32ffe974bcd00200700db1\",\r\n  measurementId: \"G-KL57K8VWQQ\",\r\n};\r\n\r\nlet app;\r\nif (firebase.apps.length === 0) {\r\n  app = firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  app = firebase.app();\r\n}\r\n\r\nconst db = app.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, auth };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Button, Input, Image } from \"react-native-elements\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { KeyboardAvoidingView } from \"react-native\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        navigation.replace(\"Home\");\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      <StatusBar style=\"light\" />\r\n      <Image\r\n        source={{\r\n          uri:\r\n            \"https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png\",\r\n        }}\r\n        style={{ width: 200, height: 200 }}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <Input\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n          autoFocus\r\n          type=\"email\"\r\n        />\r\n        <Input\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n          secureTextEntry\r\n          type=\"password\"\r\n          onSubmitEditing={signIn}\r\n        />\r\n      </View>\r\n\r\n      <Button containerStyle={styles.button} onPress={signIn} title=\"Login\" />\r\n      <Button\r\n        containerStyle={styles.button}\r\n        onPress={() => navigation.navigate(\"Register\")}\r\n        type=\"outline\"\r\n        title=\"Register\"\r\n      />\r\n      <View style={{ height: 100 }} />\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n  },\r\n  inputContainer: {\r\n    width: 300,\r\n  },\r\n  button: {\r\n    width: 200,\r\n    marginTop: 10,\r\n  },\r\n});\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { KeyboardAvoidingView } from \"react-native\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { Button, Input, Text } from \"react-native-elements\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerBackTitle: \"Back to Login\",\r\n    });\r\n  }, [navigation]);\r\n\r\n  const register = () => {\r\n    if (email !== \"\" && password !== \"\" && name !== \"\") {\r\n      auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((authUser) => {\r\n          authUser.user.updateProfile({\r\n            displayName: name,\r\n            photoURL:\r\n              imageUrl ||\r\n              \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\",\r\n          });\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      <StatusBar style=\"light\" />\r\n\r\n      <Text h3 style={{ marginBottom: 50 }}>\r\n        Create a Signal account\r\n      </Text>\r\n      <View style={styles.inputContainer}>\r\n        <Input\r\n          placeholder=\"Full Name\"\r\n          type=\"text\"\r\n          autoFocus\r\n          value={name}\r\n          onChangeText={(text) => setName(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          secureTextEntry\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"Profile picture URL (optional)\"\r\n          value={imageUrl}\r\n          onChangeText={(text) => setImageUrl(text)}\r\n          onSubmitEditing={register}\r\n        />\r\n      </View>\r\n\r\n      <Button\r\n        containerStyle={styles.button}\r\n        raised\r\n        title=\"Register\"\r\n        onPress={register}\r\n      />\r\n      <View style={{ height: 100 }} />\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  button: {\r\n    width: 200,\r\n    marginTop: 10,\r\n  },\r\n  inputContainer: {\r\n    width: 300,\r\n  },\r\n});\r\n","import React,{useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { ListItem, Avatar } from \"react-native-elements\";\r\nimport {db} from \"../firebase\";\r\n\r\nconst CustomListItem = ({id, chatName, enterChat, navigation}) => {\r\n\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection(\"chats\").doc(id).collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => (\r\n            setChatMessages(snapshot.docs.map(doc => doc.data()))\r\n        ))\r\n        return unsubscribe\r\n    }, [navigation])\r\n    return (\r\n        <ListItem key={id} onPress={() => enterChat(id, chatName)}>\r\n\r\n            <Avatar\r\n            rounded\r\n            source={{\r\n                uri: chatMessages?.[0]?.photoURL || \r\n                \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\"\r\n            }}\r\n            />\r\n            <ListItem.Content>\r\n                <ListItem.Title style={{fontWeight: \"800\"}}>\r\n                    {chatName}\r\n                </ListItem.Title>\r\n                <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\" >\r\n                    {chatMessages?.[0]?.displayName}: {chatMessages?.[0]?.message}\r\n                </ListItem.Subtitle>\r\n            </ListItem.Content>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default CustomListItem\r\n\r\nconst styles = StyleSheet.create({})\r\n","import React, {useLayoutEffect, useEffect, useState} from 'react';\r\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { Avatar } from 'react-native-elements';\r\nimport CustomListItem from '../Components/CustomListItem';\r\nimport {auth, db } from \"../firebase\";\r\nimport {AntDesign, SimpleLineIcons} from \"@expo/vector-icons\";\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n    const [chats, setChats] = useState([]);\r\n\r\n    const signOutUser = () => {\r\n        auth.signOut().then(() => {\r\n            navigation.replace(\"Login\");\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection(\"chats\").onSnapshot(snapshot => (\r\n            setChats(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        ))\r\n    }, [])\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Signal\",\r\n            headerStyle: {backgroundColor: \"#ffff\"},\r\n            headerTitleStyle: {color: \"black\"},\r\n            headerTintColor: \"black\",\r\n            headerLeft: () => (\r\n                <View style={{marginLeft: 20}}>\r\n                    <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\r\n                    <Avatar rounded source={{uri: auth?.currentUser?.photoURL}}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n                <View style={{ \r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    width: 80,\r\n                    marginRight: 20,\r\n                }}>\r\n                <TouchableOpacity activeOpacity={0.5}>\r\n                    <AntDesign name=\"camerao\" size={24} color=\"black\" />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"AddChat\")} activeOpacity={0.5}>\r\n                    <SimpleLineIcons name=\"pencil\" size={24} color=\"black\" />\r\n                </TouchableOpacity>              \r\n            </View>\r\n            ),\r\n        })\r\n    }, [navigation])\r\n\r\n    const enterChat = (id, chatName) => {\r\n        navigation.navigate('Chat', {\r\n            id,\r\n            chatName,\r\n        });\r\n    }\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView style={styles.container}>\r\n                {chats.map (({id, data: {chatName}}) => (\r\n                    <CustomListItem key={id} id={id} chatName={chatName} enterChat={enterChat}/>   \r\n                ))}\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: \"100%\",\r\n    },\r\n})\r\n","import React, {useLayoutEffect, useState} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport {Button, Input} from \"react-native-elements\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport {db} from \"../firebase\";\r\n\r\nconst AddChatScreen = ({navigation}) => {\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Add a new Chat\",\r\n            headerBackTitle: \"Chats\",\r\n        })\r\n    }, [])\r\n\r\n    const createChat = async() => {\r\n        await db.collection(\"chats\").add({\r\n            chatName: input,\r\n        }).then(() => {\r\n            navigation.goBack()\r\n        }).catch((error) => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Input \r\n            placeholder=\"Enter a chat name\"\r\n            value={input}\r\n            onChangeText={(text) => setInput(text)}\r\n            leftIcon={\r\n                <Icon name=\"wechat\" type=\"antdesign\" size={24}/>\r\n            }\r\n            />\r\n            <Button disabled={!input} onPress={createChat} title=\"Create new Chat\" />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AddChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        backgroundColor: \"white\",\r\n        padding: 30,\r\n        height: \"100%\",\r\n    }\r\n})\r\n","import React,{useLayoutEffect, useState} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, SafeAreaView, TouchableWithoutFeedback } from 'react-native';\r\nimport { Avatar } from \"react-native-elements\";\r\nimport {AntDesign, FontAwesome, Ionicons} from \"@expo/vector-icons\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { KeyboardAvoidingView } from 'react-native';\r\nimport { Platform } from 'react-native';\r\nimport { ScrollView, TextInput, Keyboard } from 'react-native';\r\nimport firebase from \"firebase\";\r\nimport {db, auth} from \"../firebase\";\r\n\r\nconst ChatScreen = ({navigation, route}) => {\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Chat\",\r\n            headerTitleAlign: \"left\",\r\n            headerTitle: () => (\r\n                <View\r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    <Avatar rounded source = {{uri: messages[messages.length - 1]?.data.photoURL || \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\"}} />\r\n                    <Text style={{color:\"white\", marginLeft: 10, fontWeight: \"700\"}}>{route.params.chatName}</Text>\r\n                </View>\r\n            ),\r\n            headerLeft: () => (\r\n                <TouchableOpacity\r\n                style={{marginLeft: 10}}\r\n                onPress={navigation.goBack}\r\n                >\r\n                    <AntDesign name=\"arrowleft\" size={24} color=\"white\"/>\r\n                </TouchableOpacity>\r\n            ),\r\n            headerRight: () => (\r\n                <View\r\n                style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    width: 80,\r\n                    marginRight: 20,\r\n                }}\r\n                >\r\n                <TouchableOpacity >\r\n                    <FontAwesome name=\"video-camera\" size={24} color=\"white\" />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity>\r\n                    <Ionicons name=\"call\" size={24} color=\"white\" />\r\n                </TouchableOpacity>\r\n                </View>\r\n            )\r\n        })\r\n    \r\n    }, [navigation, messages])\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = db.collection(\"chats\")\r\n        .doc(route.params.id).collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot(snapshot => setMessages(\r\n                snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))\r\n            ))\r\n\r\n            return unsubscribe;\r\n    }, [route])\r\n\r\n    console.log(messages);\r\n\r\n    const sendMessage = () => {\r\n        Keyboard.dismiss();\r\n\r\n        if (input !== \"\"){\r\n        db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            message: input,\r\n            displayName: auth.currentUser.displayName,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n        })\r\n    }\r\n        setInput(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={{flex: 1, backgroundColor: \"white\"}}>\r\n            <StatusBar style=\"light\" />\r\n            <KeyboardAvoidingView \r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n            style={styles.container}\r\n            keyboardVerticalOffset={90}\r\n            >\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                <>\r\n                <ScrollView contentContainerStyle={{paddingTop: 15, paddingBottom: 50}}>\r\n                    {/* chats area */}\r\n                    { messages.map(({id, data}) => \r\n                        data.email === auth.currentUser.email ? (\r\n                            <View key={id} style={styles.reciever}>\r\n                                <Avatar \r\n                                rounded\r\n                                position=\"absolute\"\r\n                                containerStyle={{\r\n                                    position: \"absolute\",\r\n                                    bottom: -15,\r\n                                    right: -5,\r\n                                }}\r\n                                bottom={-15}\r\n                                right={-5}\r\n                                size={30}\r\n                                source={{\r\n                                    uri: data.photoURL,\r\n                                }}/>\r\n                                <Text style={styles.recieverText}>{data.message}</Text>\r\n                            </View>\r\n                        ) : (\r\n                            <View key={id} style={styles.sender}>\r\n                                <Avatar \r\n                                position=\"absolute\"\r\n                                rounded\r\n                                containerStyle={{\r\n                                    position: \"absolute\",\r\n                                    bottom: -15,\r\n                                    right: -5,\r\n                                }}\r\n                                bottom={-15}\r\n                                right={-5}\r\n                                size={30}\r\n                                source={{\r\n                                    uri: data.photoURL,\r\n                                }}/>\r\n                                <Text style={styles.senderText}>{data.message}</Text>\r\n                                <Text style={styles.senderName}>{data.displayName}</Text>\r\n                            </View>\r\n                        )\r\n                    )}\r\n                </ScrollView>\r\n                <View style={styles.footer}>\r\n                    {/* input */}\r\n                    <TextInput onChangeText={text => setInput(text)} value={input} placeholder=\"Signal Message\" onSubmitEditting={sendMessage} style={styles.textInput}/>\r\n                    <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\r\n                        <Ionicons name=\"send\" size={24} color=\"#2B68E6\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                </>\r\n                </TouchableWithoutFeedback>\r\n            </KeyboardAvoidingView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default ChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n\r\n    },\r\n    reciever: {\r\n        padding: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        alignSelf: \"flex-end\",\r\n        borderRadius: 20,\r\n        marginRight: 15,\r\n        marginBottom: 20,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\",\r\n    },\r\n    sender: {\r\n        padding: 15,\r\n        backgroundColor: \"#2B68E6\",\r\n        alignSelf: \"flex-start\",\r\n        borderRadius: 20,\r\n        margin: 15,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\"\r\n    },\r\n    senderName: {\r\n        left: 10,\r\n        paddingRight: 10,\r\n        fontSize: 10,\r\n        color: \"white\",\r\n    },\r\n    senderText: {\r\n        color: \"white\",\r\n        fontWeight: \"500\",\r\n        marginLeft: 10,\r\n        marginBottom: 15,\r\n    },\r\n    recieverText: {\r\n        color: \"black\",\r\n        fontWeight: \"500\",\r\n        marginRight: 10,\r\n    },\r\n    footer: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        padding: 15,\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n    },\r\n    textInput: {\r\n        bottom: 0,\r\n        height: 40,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        padding: 10,\r\n        color: \"grey\",\r\n        borderRadius: 30,\r\n    },\r\n})\r\n","import \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\n\nconst Stack = createStackNavigator();\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#2C6BED\" },\n  headerTitleStyle: { color: \"white\", textAlign: \"center\" },\n  headerTintColor: \"white\",\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={globalScreenOptions}>\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"AddChat\" component={AddChatScreen} />\n        <Stack.Screen name=\"Chat\" component={ChatScreen} />\n\n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}